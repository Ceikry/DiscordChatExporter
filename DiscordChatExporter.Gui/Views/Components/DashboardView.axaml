<UserControl
    x:Class="DiscordChatExporter.Gui.Views.Components.DashboardView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:asyncImageLoader="clr-namespace:AsyncImageLoader;assembly=AsyncImageLoader.Avalonia"
    xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:components="clr-namespace:DiscordChatExporter.Gui.ViewModels.Components"
    xmlns:converters="clr-namespace:DiscordChatExporter.Gui.Converters"
    xmlns:data="clr-namespace:DiscordChatExporter.Core.Discord.Data;assembly=DiscordChatExporter.Core"
    xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
    xmlns:materialStyles="clr-namespace:Material.Styles.Controls;assembly=Material.Styles"
    x:Name="UserControl"
    Loaded="UserControl_OnLoaded">
    <Design.DataContext>
        <components:DashboardViewModel />
    </Design.DataContext>

    <UserControl.Resources>
        <!--  Collection view for DM channels  -->
        <CollectionViewSource x:Key="AvailableDirectChannelsViewSource" Source="{Binding AvailableChannels, Mode=OneWay}">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription Direction="Descending" PropertyName="LastMessageId" />
                <componentModel:SortDescription Direction="Ascending" PropertyName="Name" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <!--  Collection view for guild channels  -->
        <CollectionViewSource x:Key="AvailableChannelsViewSource" Source="{Binding AvailableChannels, Mode=OneWay}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription Converter="{x:Static converters:ChannelToGroupKeyConverter.Instance}" />
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription Direction="Ascending" PropertyName="IsThread" />
                <componentModel:SortDescription Direction="Ascending" PropertyName="Position" />
                <componentModel:SortDescription Direction="Ascending" PropertyName="Name" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </UserControl.Resources>

    <DockPanel>
        <!--  Header  -->
        <StackPanel
            Background="{DynamicResource MaterialDarkBackgroundBrush}"
            DockPanel.Dock="Top"
            Orientation="Vertical">
            <Grid ColumnDefinitions="*,Auto">
                <materialStyles:Card
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="12,12,0,12">
                    <!--  Token  -->
                    <TextBox
                        x:Name="TokenValueTextBox"
                        MinHeight="36"
                        VerticalAlignment="Bottom"
                        BorderThickness="0"
                        FontFamily="Consolas, Monospace, Courier"
                        FontSize="16"
                        PasswordChar="*"
                        RevealPassword="{Binding IsFocused, RelativeSource={RelativeSource Self}}"
                        Text="{Binding Token}"
                        Watermark="Token">
                        <TextBox.InnerLeftContent>
                            <materialIcons:MaterialIcon
                                Grid.Column="0"
                                Width="24"
                                Height="24"
                                Margin="4,0,8,0"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource PrimaryHueMidBrush}"
                                Kind="Key" />
                        </TextBox.InnerLeftContent>
                        <TextBox.InnerRightContent>
                            <Button
                                Grid.Column="2"
                                Margin="0,0,4,0"
                                Padding="4"
                                Command="{Binding PullGuildsCommand}"
                                IsDefault="True"
                                Theme="{DynamicResource MaterialFlatButton}"
                                ToolTip.Tip="Pull available guilds and channels (Enter)">
                                <materialIcons:MaterialIcon
                                    Width="24"
                                    Height="24"
                                    Kind="ArrowRight" />
                            </Button>
                        </TextBox.InnerRightContent>
                    </TextBox>
                </materialStyles:Card>

                <!--  Settings button  -->
                <Button
                    Grid.Column="1"
                    Margin="4,0"
                    Padding="8"
                    VerticalAlignment="Center"
                    Command="{Binding ShowSettingsCommand}"
                    Foreground="{DynamicResource MaterialDarkForegroundBrush}"
                    Theme="{DynamicResource MaterialFlatButton}"
                    ToolTip.Tip="Settings">
                    <materialIcons:MaterialIcon
                        Width="24"
                        Height="24"
                        Kind="Settings" />
                </Button>
            </Grid>

            <!--  Progress  -->
            <ProgressBar
                Height="2"
                Background="Transparent"
                IsIndeterminate="{Binding IsProgressIndeterminate}"
                Value="{Binding Progress.Current.Fraction, Mode=OneWay}" />
        </StackPanel>

        <!--  Body  -->
        <Panel
            Background="{DynamicResource MaterialCardBackgroundBrush}"
            DockPanel.Dock="Bottom"
            IsEnabled="{Binding !IsBusy}">
            <!--  Placeholder / usage instructions  -->
            <Panel IsVisible="{Binding !AvailableGuilds}">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <TextBlock
                        Margin="32,16"
                        FontSize="14"
                        FontWeight="Light"
                        LineHeight="20">
                        <!--  User token  -->
                        <InlineUIContainer>
                            <materialIcons:MaterialIcon
                                Margin="0,0,2,-2"
                                Foreground="{DynamicResource PrimaryHueMidBrush}"
                                Kind="Account" />
                        </InlineUIContainer>
                        <Run
                            FontSize="16"
                            FontWeight="SemiBold"
                            Text="To get the token for your personal account:" />
                        <LineBreak />

                        <Run Text="*  Automating user accounts is technically against TOS —" />
                        <Run FontWeight="SemiBold" Text="use at your own risk" /><Run Text="!" />
                        <LineBreak />

                        <Run Text="1. Open Discord in your" />
                        <Hyperlink Command="{s:Action OpenDiscord}">
                            <Run Text="web browser" />
                        </Hyperlink>
                        <Run Text="and login" />
                        <LineBreak />

                        <Run Text="2. Open any server or direct message channel" />
                        <LineBreak />

                        <Run Text="3. Press" />
                        <Run FontWeight="SemiBold" Text="Ctrl+Shift+I" />
                        <Run Text="to show developer tools" />
                        <LineBreak />

                        <Run Text="4. Navigate to the" />
                        <Run FontWeight="SemiBold" Text="Network" />
                        <Run Text="tab" />
                        <LineBreak />

                        <Run Text="5. Press" />
                        <Run FontWeight="SemiBold" Text="Ctrl+R" />
                        <Run Text="to reload" />
                        <LineBreak />

                        <Run Text="6. Switch between random channels to trigger network requests" />
                        <LineBreak />

                        <Run Text="7. Search for a request that starts with" />
                        <Run FontWeight="SemiBold" Text="messages" />
                        <LineBreak />

                        <Run Text="8. Select the" />
                        <Run FontWeight="SemiBold" Text="Headers" />
                        <Run Text="tab on the right" />
                        <LineBreak />

                        <Run Text="9. Scroll down to the" />
                        <Run FontWeight="SemiBold" Text="Request Headers" />
                        <Run Text="section" />
                        <LineBreak />

                        <Run Text="10. Copy the value of the" />
                        <Run FontWeight="SemiBold" Text="authorization" />
                        <Run Text="header" />
                        <LineBreak />
                        <LineBreak />

                        <!--  Bot token  -->
                        <InlineUIContainer>
                            <materialIcons:MaterialIcon
                                Margin="0,0,2,-2"
                                Foreground="{DynamicResource PrimaryHueMidBrush}"
                                Kind="Robot" />
                        </InlineUIContainer>
                        <Run
                            FontSize="16"
                            FontWeight="SemiBold"
                            Text="To get the token for your bot:" />
                        <LineBreak />

                        <Run Text="1. Open Discord" />
                        <Hyperlink Command="{s:Action OpenDiscordDeveloperPortal}">
                            <Run Text="developer portal" />
                        </Hyperlink>
                        <LineBreak />

                        <Run Text="2. Open your application's settings" />
                        <LineBreak />

                        <Run Text="3. Navigate to the" />
                        <Run FontWeight="SemiBold" Text="Bot" />
                        <Run Text="section on the left" />
                        <LineBreak />

                        <Run Text="4. Under" />
                        <Run FontWeight="SemiBold" Text="Token" />
                        <Run Text="click" />
                        <Run FontWeight="SemiBold" Text="Copy" />
                        <LineBreak />

                        <Run Text="*  Your bot needs to have the" />
                        <Run FontWeight="SemiBold" Text="Message Content Intent" />
                        <Run Text="enabled to read messages" />
                        <LineBreak />
                        <LineBreak />

                        <Run Text="If you have questions or issues, please refer to the" />
                        <Hyperlink Command="{s:Action ShowHelp}">documentation</Hyperlink>
                    </TextBlock>
                </ScrollViewer>
            </Panel>

            <!--  Guilds and channels  -->
            <Grid ColumnDefinitions="Auto,*" IsVisible="{Binding AvailableGuilds}">
                <!--  Guilds  -->
                <Border
                    Grid.Column="0"
                    BorderBrush="{DynamicResource MaterialDividerBrush}"
                    BorderThickness="0,0,1,0">
                    <ListBox
                        ItemsSource="{Binding AvailableGuilds}"
                        ScrollViewer.VerticalScrollBarVisibility="Hidden"
                        SelectedItem="{Binding SelectedGuild}"
                        SelectionMode="Single">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Panel
                                    x:Name="GuildPanel"
                                    Margin="-8"
                                    Cursor="Hand"
                                    PointerReleased="GuildPanel_OnPointerReleased"
                                    ToolTip.Tip="{Binding Name}">
                                    <!--  Guild icon placeholder  -->
                                    <Ellipse
                                        Width="48"
                                        Height="48"
                                        Margin="12,4,12,4"
                                        Fill="{DynamicResource MaterialDividerBrush}" />

                                    <!--  Guild icon  -->
                                    <Ellipse
                                        Width="48"
                                        Height="48"
                                        Margin="12,4,12,4"
                                        Stroke="{DynamicResource MaterialDividerBrush}"
                                        StrokeThickness="1">
                                        <Ellipse.Fill>
                                            <ImageBrush asyncImageLoader:ImageLoader.Source="{Binding IconUrl}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Panel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>

                <!--  Channels  -->
                <Border Grid.Column="1">
                    <ListBox
                        ItemsSource="{Binding AvailableChannels}"
                        SelectionMode="Multiple, Toggle"
                        TextSearch.Text="Name">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type data:Channel}">
                                <Grid
                                    x:Name="ChannelListBoxItemGrid"
                                    Margin="-8"
                                    ColumnDefinitions="Auto,*,Auto"
                                    PointerPressed="ChannelListBoxItemGrid_OnPointerPressed">
                                    <ToolTip.Tip>
                                        <TextBlock>
                                            <Run Text="Last message:" />
                                            <Run FontWeight="SemiBold" Text="{Binding LastMessageId, Converter={x:Static converters:SnowflakeToDateTimeOffsetConverter.Instance}, TargetNullValue=never}" />
                                        </TextBlock>
                                    </ToolTip.Tip>

                                    <!--  Channel icon  -->
                                    <materialIcons:MaterialIcon
                                        Grid.Column="0"
                                        Margin="16,7,0,6"
                                        VerticalAlignment="Center"
                                        Classes.voice="{Binding IsVoice}"
                                        Kind="Pound">
                                        <materialIcons:MaterialIcon.Styles>
                                            <Style Selector="materialIcons|MaterialIcon">
                                                <Style Selector="^.voice">
                                                    <Setter Property="Kind" Value="VolumeHigh" />
                                                </Style>
                                            </Style>
                                        </materialIcons:MaterialIcon.Styles>
                                    </materialIcons:MaterialIcon>

                                    <!--  Channel name  -->
                                    <TextBlock
                                        Grid.Column="1"
                                        Margin="3,8,8,8"
                                        VerticalAlignment="Center"
                                        FontSize="14"
                                        Text="{Binding Name, Mode=OneWay}" />

                                    <!--  Is selected checkmark  -->
                                    <materialIcons:MaterialIcon
                                        Grid.Column="2"
                                        Width="24"
                                        Height="24"
                                        Margin="8,0"
                                        VerticalAlignment="Center"
                                        IsVisible="{Binding $parent[ListBoxItem].IsSelected, Mode=OneWay}"
                                        Kind="Check" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>
            </Grid>

            <!--  Export button  -->
            <Button
                Margin="32,24"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Command="{Binding ExportCommand}"
                IsVisible="{Binding CanExport}"
                Theme="{DynamicResource MaterialFloatingActionAccentButton}">
                <materialIcons:MaterialIcon
                    Width="32"
                    Height="32"
                    Kind="Download" />
            </Button>
        </Panel>
    </DockPanel>
</UserControl>