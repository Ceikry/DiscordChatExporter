<UserControl
    x:Class="DiscordChatExporter.Gui.Views.Components.DashboardView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:DiscordChatExporter.Gui.Behaviors"
    xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:components="clr-namespace:DiscordChatExporter.Gui.ViewModels.Components"
    xmlns:controls="clr-namespace:DiscordChatExporter.Gui.Views.Controls"
    xmlns:converters="clr-namespace:DiscordChatExporter.Gui.Converters"
    xmlns:data="clr-namespace:DiscordChatExporter.Core.Discord.Data;assembly=DiscordChatExporter.Core"
    xmlns:globalization="clr-namespace:System.Globalization;assembly=System.Runtime"
    xmlns:materialStyles="clr-namespace:Material.Styles.Controls;assembly=Material.Styles"
    xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
    x:Name="UserControl"
    Loaded="UserControl_OnLoaded">
    <Design.DataContext>
        <components:DashboardViewModel />
    </Design.DataContext>
    
    <UserControl.Resources>
        <!--  Collection view for DM channels  -->
        <CollectionViewSource x:Key="AvailableDirectChannelsViewSource" Source="{Binding AvailableChannels, Mode=OneWay}">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription Direction="Descending" PropertyName="LastMessageId" />
                <componentModel:SortDescription Direction="Ascending" PropertyName="Name" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <!--  Collection view for guild channels  -->
        <CollectionViewSource x:Key="AvailableChannelsViewSource" Source="{Binding AvailableChannels, Mode=OneWay}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription Converter="{x:Static converters:ChannelToGroupKeyConverter.Instance}" />
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription Direction="Ascending" PropertyName="IsThread" />
                <componentModel:SortDescription Direction="Ascending" PropertyName="Position" />
                <componentModel:SortDescription Direction="Ascending" PropertyName="Name" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </UserControl.Resources>

    <Grid RowDefinitions="Auto,Auto,*,Auto">
        <!--  Toolbar  -->
        <Grid Grid.Row="0" Background="{DynamicResource MaterialDarkBackgroundBrush}" ColumnDefinitions="*,Auto">
            <materialStyles:Card
                Grid.Row="0"
                Grid.Column="0"
                Margin="12,12,0,12">
                <Grid ColumnDefinitions="Auto,*,Auto">
                    <!--  Token icon  -->
                    <avalonia:MaterialIcon
                        Grid.Column="0"
                        Width="24"
                        Height="24"
                        Margin="8"
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource PrimaryHueMidBrush}"
                        Kind="Key" />

                    <!--  Token  -->
                    <controls:RevealablePasswordBox
                        x:Name="TokenValueTextBox"
                        Grid.Column="1"
                        Margin="0,6,6,8"
                        VerticalAlignment="Bottom"
                        materialDesign:HintAssist.Hint="Token"
                        BorderThickness="0"
                        FontFamily="Consolas"
                        FontSize="16"
                        Password="{Binding Token, UpdateSourceTrigger=PropertyChanged}">
                        <controls:RevealablePasswordBox.Style>
                            <Style TargetType="{x:Type controls:RevealablePasswordBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=materialDesign:Card}}" Value="True">
                                        <Setter Property="IsRevealed" Value="True" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource AncestorType=materialDesign:Card}}" Value="True">
                                        <Setter Property="IsRevealed" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:RevealablePasswordBox.Style>
                    </controls:RevealablePasswordBox>

                    <!--  Pull guilds button  -->
                    <Button
                        Grid.Column="2"
                        Margin="0,6,6,6"
                        Padding="4"
                        Command="{Binding PullGuildsCommand}"
                        IsDefault="True"
                        Theme="{DynamicResource MaterialFlatButton}"
                        ToolTip.Tip="Pull available guilds and channels (Enter)">
                        <materialDesign:MaterialIcon
                            Width="24"
                            Height="24"
                            Kind="ArrowRight" />
                    </Button>
                </Grid>
            </materialStyles:Card>

            <!--  Settings button  -->
            <Button
                Grid.Column="1"
                Margin="6"
                Padding="4"
                Command="{Binding ShowSettingsCommand}"
                Foreground="{DynamicResource MaterialDarkForegroundBrush}"
                Theme="{DynamicResource MaterialFlatButton}"
                ToolTip.Tip="Settings">
                <Button.Resources>
                    <SolidColorBrush x:Key="MaterialDesignFlatButtonClick" Color="#4C4C4C" />
                </Button.Resources>
                <materialDesign:MaterialIcon
                    Width="24"
                    Height="24"
                    Kind="Settings" />
            </Button>
        </Grid>

        <!--  Progress bar  -->
        <ProgressBar
            Grid.Row="1"
            Background="{DynamicResource MaterialDarkBackgroundBrush}"
            IsIndeterminate="{Binding IsProgressIndeterminate}"
            Value="{Binding Progress.Current.Fraction, Mode=OneWay}" />

        <!--  Content  -->
        <Grid Grid.Row="2" IsEnabled="{Binding IsBusy, Converter={x:Static converters:InverseBoolConverter.Instance}}">
            <!--  Placeholder / usage instructions  -->
            <Grid IsVisible="{Binding !AvailableGuilds}">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <TextBlock
                        Margin="32,16"
                        FontSize="14"
                        FontWeight="Light"
                        LineHeight="20">
                        <!--  User token  -->
                        <InlineUIContainer>
                            <materialDesign:MaterialIcon
                                Margin="0,0,2,-2"
                                Foreground="{DynamicResource PrimaryHueMidBrush}"
                                Kind="Account" />
                        </InlineUIContainer>
                        <Run
                            FontSize="16"
                            FontWeight="SemiBold"
                            Text="To get the token for your personal account:" />
                        <LineBreak />

                        <Run Text="*  Automating user accounts is technically against TOS —" />
                        <Run FontWeight="SemiBold" Text="use at your own risk" /><Run Text="!" />
                        <LineBreak />

                        <Run Text="1. Open Discord in your" />
                        <Hyperlink Command="{s:Action OpenDiscord}">
                            <Run Text="web browser" />
                        </Hyperlink>
                        <Run Text="and login" />
                        <LineBreak />

                        <Run Text="2. Open any server or direct message channel" />
                        <LineBreak />

                        <Run Text="3. Press" />
                        <Run FontWeight="SemiBold" Text="Ctrl+Shift+I" />
                        <Run Text="to show developer tools" />
                        <LineBreak />

                        <Run Text="4. Navigate to the" />
                        <Run FontWeight="SemiBold" Text="Network" />
                        <Run Text="tab" />
                        <LineBreak />

                        <Run Text="5. Press" />
                        <Run FontWeight="SemiBold" Text="Ctrl+R" />
                        <Run Text="to reload" />
                        <LineBreak />

                        <Run Text="6. Switch between random channels to trigger network requests" />
                        <LineBreak />

                        <Run Text="7. Search for a request that starts with" />
                        <Run FontWeight="SemiBold" Text="messages" />
                        <LineBreak />

                        <Run Text="8. Select the" />
                        <Run FontWeight="SemiBold" Text="Headers" />
                        <Run Text="tab on the right" />
                        <LineBreak />

                        <Run Text="9. Scroll down to the" />
                        <Run FontWeight="SemiBold" Text="Request Headers" />
                        <Run Text="section" />
                        <LineBreak />

                        <Run Text="10. Copy the value of the" />
                        <Run FontWeight="SemiBold" Text="authorization" />
                        <Run Text="header" />
                        <LineBreak />
                        <LineBreak />

                        <!--  Bot token  -->
                        <InlineUIContainer>
                            <materialDesign:MaterialIcon
                                Margin="0,0,2,-2"
                                Foreground="{DynamicResource PrimaryHueMidBrush}"
                                Kind="Robot" />
                        </InlineUIContainer>
                        <Run
                            FontSize="16"
                            FontWeight="SemiBold"
                            Text="To get the token for your bot:" />
                        <LineBreak />

                        <Run Text="1. Open Discord" />
                        <Hyperlink Command="{s:Action OpenDiscordDeveloperPortal}">
                            <Run Text="developer portal" />
                        </Hyperlink>
                        <LineBreak />

                        <Run Text="2. Open your application's settings" />
                        <LineBreak />

                        <Run Text="3. Navigate to the" />
                        <Run FontWeight="SemiBold" Text="Bot" />
                        <Run Text="section on the left" />
                        <LineBreak />

                        <Run Text="4. Under" />
                        <Run FontWeight="SemiBold" Text="Token" />
                        <Run Text="click" />
                        <Run FontWeight="SemiBold" Text="Copy" />
                        <LineBreak />

                        <Run Text="*  Your bot needs to have the" />
                        <Run FontWeight="SemiBold" Text="Message Content Intent" />
                        <Run Text="enabled to read messages" />
                        <LineBreak />
                        <LineBreak />

                        <Run Text="If you have questions or issues, please refer to the" />
                        <Hyperlink Command="{s:Action ShowHelp}">documentation</Hyperlink>
                    </TextBlock>
                </ScrollViewer>
            </Grid>

            <!--  Guilds and channels  -->
            <Grid IsVisible="{Binding AvailableGuilds}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!--  Guilds  -->
                <Border
                    Grid.Column="0"
                    BorderBrush="{DynamicResource MaterialDividerBrush}"
                    BorderThickness="0,0,1,0">
                    <ListBox
                        ItemsSource="{Binding AvailableGuilds}"
                        ScrollViewer.VerticalScrollBarVisibility="Hidden"
                        SelectedItem="{Binding SelectedGuild}"
                        SelectionMode="Single">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid
                                    Margin="-8"
                                    Cursor="Hand"
                                    MouseLeftButtonUp="{s:Action PullChannels}"
                                    ToolTip.Tip="{Binding Name}">
                                    <!--  Guild icon placeholder  -->
                                    <Ellipse
                                        Width="48"
                                        Height="48"
                                        Margin="12,4,12,4"
                                        Fill="{DynamicResource MaterialDividerBrush}" />

                                    <!--  Guild icon  -->
                                    <Ellipse
                                        Width="48"
                                        Height="48"
                                        Margin="12,4,12,4"
                                        Stroke="{DynamicResource MaterialDividerBrush}"
                                        StrokeThickness="1">
                                        <Ellipse.Fill>
                                            <ImageBrush ImageSource="{Binding IconUrl}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>

                <!--  Channels  -->
                <Border Grid.Column="1">
                    <ListBox
                        HorizontalContentAlignment="Stretch"
                        SelectionMode="Extended"
                        TextSearch.TextPath="Name"
                        VirtualizingPanel.IsVirtualizingWhenGrouping="True">
                        <b:Interaction.Behaviors>
                            <behaviors:ChannelMultiSelectionListBoxBehavior SelectedItems="{Binding SelectedChannels}" />
                        </b:Interaction.Behaviors>
                        <ListBox.Style>
                            <Style BasedOn="{StaticResource {x:Type ListBox}}" TargetType="{x:Type ListBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedGuild.IsDirect}" Value="True">
                                        <Setter Property="ItemsSource" Value="{Binding Source={StaticResource AvailableDirectChannelsViewSource}}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SelectedGuild.IsDirect}" Value="False">
                                        <Setter Property="ItemsSource" Value="{Binding Source={StaticResource AvailableChannelsViewSource}}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>
                        <ListBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="{x:Type GroupItem}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate d:DataContext="{x:Type CollectionViewGroup}">
                                                    <Expander
                                                        Margin="0"
                                                        Padding="0"
                                                        BorderBrush="{DynamicResource MaterialDividerBrush}"
                                                        BorderThickness="0,0,0,1"
                                                        Header="{Binding Name}"
                                                        IsExpanded="False">
                                                        <ItemsPresenter />
                                                    </Expander>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.ContainerStyle>
                            </GroupStyle>
                        </ListBox.GroupStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type data:Channel}">
                                <Grid Margin="-8">
                                    <Grid.InputBindings>
                                        <MouseBinding Command="{s:Action Export}" MouseAction="LeftDoubleClick" />
                                    </Grid.InputBindings>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.ToolTip>
                                        <TextBlock>
                                            <Run Text="Last message:" />
                                            <Run FontWeight="SemiBold" Text="{Binding LastMessageId, Converter={x:Static converters:SnowflakeToDateTimeOffsetConverter.Instance}, ConverterCulture={x:Static globalization:CultureInfo.CurrentCulture}, TargetNullValue=never}" />
                                        </TextBlock>
                                    </Grid.ToolTip>

                                    <!--  Channel icon  -->
                                    <materialDesign:MaterialIcon
                                        Grid.Column="0"
                                        Margin="16,7,0,6"
                                        VerticalAlignment="Center">
                                        <materialDesign:MaterialIcon.Style>
                                            <Style TargetType="{x:Type materialDesign:MaterialIcon}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsVoice}" Value="True">
                                                        <Setter Property="Kind" Value="VolumeHigh" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsVoice}" Value="False">
                                                        <Setter Property="Kind" Value="Pound" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:MaterialIcon.Style>
                                    </materialDesign:MaterialIcon>

                                    <!--  Channel name  -->
                                    <TextBlock
                                        Grid.Column="1"
                                        Margin="3,8,8,8"
                                        VerticalAlignment="Center"
                                        FontSize="14"
                                        Text="{Binding Name, Mode=OneWay}" />

                                    <!--  Is selected checkmark  -->
                                    <materialDesign:MaterialIcon
                                        Grid.Column="2"
                                        Width="24"
                                        Height="24"
                                        Margin="8,0"
                                        VerticalAlignment="Center"
                                        Kind="Check"
                                        Visibility="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Converter={x:Static s:BoolToVisibilityConverter.Instance}, Mode=OneWay}" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>
            </Grid>

            <!--  Export button  -->
            <Button
                Margin="32,24"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Command="{Binding ExportCommand}"
                IsVisible="{Binding CanExport}"
                Theme="{DynamicResource MaterialFloatingActionAccentButton}">
                <materialDesign:MaterialIcon
                    Width="32"
                    Height="32"
                    Kind="Download" />
            </Button>
        </Grid>
    </Grid>
</UserControl>